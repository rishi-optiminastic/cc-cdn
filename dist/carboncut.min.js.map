{"version":3,"file":"carboncut.min.js","sources":["../src/utils/helpers.js","../src/core/config.js","../src/core/state.js","../src/core/session.js","../src/utils/uuid.js","../src/utils/logger.js","../src/transport/api.js","../src/transport/api-worker.js","../src/utils/utm.js","../src/tracking/event.js","../src/tracking/ping.js","../src/tracking/pageview.js","../src/listeners/browser.js","../src/index.js"],"sourcesContent":["\nexport function getTrackerFromURL() {\n  if (typeof window === 'undefined') return null;\n  const params = new URLSearchParams(window.location.search);\n  return params.get('cc_tracker');\n}\n\n\nexport function getBrowserMetadata() {\n  if (typeof window === 'undefined' || typeof document === 'undefined') {\n    return {};\n  }\n\n  return {\n    user_agent: navigator.userAgent,\n    screen_resolution: `${window.screen.width}x${window.screen.height}`,\n    viewport_size: `${window.innerWidth}x${window.innerHeight}`,\n    language: navigator.language,\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    referrer: document.referrer || 'direct',\n    page_url: window.location.href,\n    page_title: document.title\n  };\n}\n\n\nexport function getPageInfo() {\n  if (typeof window === 'undefined' || typeof document === 'undefined') {\n    return {};\n  }\n\n  return {\n    page_path: window.location.pathname,\n    page_url: window.location.href,\n    page_title: document.title,\n    referrer: document.referrer\n  };\n}\n\n\nexport function isBrowser() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n","import { getTrackerFromURL } from '../utils/helpers.js';\n\n\nexport class Config {\n  constructor() {\n    this.defaults = {\n      trackerToken: null,\n      // Ensure trailing slash is always present\n      apiUrl: 'http://127.0.0.1:8000/api/v1/events/', \n      sessionId: null,\n      pingInterval: 15000,\n      debug: false,\n      autoTrack: true, \n      respectDoNotTrack: true, \n      maxRetries: 3,\n      retryDelay: 1000,\n      domain: null,\n    };\n    \n    this.config = { ...this.defaults };\n  }\n\n  \n  init(options = {}) {\n    this.config = {\n      ...this.defaults,\n      ...options,\n      trackerToken: options.trackerToken || getTrackerFromURL()\n    };\n\n    return this.validate();\n  }\n\n  \n  validate() {\n    if (!this.config.trackerToken) {\n      console.error('CarbonCut: No tracker token provided. Add data-token=\"YOUR_TOKEN\" to script tag.');\n      return false;\n    }\n\n    if (!this.config.apiUrl) {\n      console.error('CarbonCut: API URL is required');\n      return false;\n    }\n\n    return true;\n  }\n\n  \n  get(key) {\n    return this.config[key];\n  }\n\n  \n  set(key, value) {\n    this.config[key] = value;\n  }\n\n  \n  getAll() {\n    return { ...this.config };\n  }\n}","\nexport class State {\n  constructor() {\n    this.state = {\n      isInitialized: false,\n      timeSpent: 0,\n      lastPath: null,\n      retryCount: 0\n    };\n  }\n\n  \n  get(key) {\n    return this.state[key];\n  }\n\n  \n  set(key, value) {\n    this.state[key] = value;\n  }\n\n  \n  incrementTimeSpent(seconds) {\n    this.state.timeSpent += seconds;\n  }\n\n  \n  reset() {\n    this.state = {\n      isInitialized: false,\n      timeSpent: 0,\n      lastPath: null,\n      retryCount: 0\n    };\n  }\n\n  \n  getAll() {\n    return { ...this.state };\n  }\n}","import { generateUUID } from '../utils/uuid.js';\n\n\nexport class Session {\n  constructor(config, logger) {\n    this.config = config;\n    this.logger = logger;\n    this.sessionId = null;\n  }\n\n  \n  start() {\n    this.sessionId = generateUUID();\n    this.config.set('sessionId', this.sessionId);\n    \n   \n    if (typeof window !== 'undefined') {\n      window.__CC_SESSION_ID = this.sessionId;\n      window.__CC_TRACKER_TOKEN = this.config.get('trackerToken');\n    }\n    \n    this.logger.log('Session started:', this.sessionId);\n    return this.sessionId;\n  }\n\n  \n  getId() {\n    return this.sessionId;\n  }\n\n  \n  end() {\n    this.logger.log('Session ended:', this.sessionId);\n    this.sessionId = null;\n    this.config.set('sessionId', null);\n  }\n\n  \n  isActive() {\n    return this.sessionId !== null;\n  }\n}","\nexport function generateUUID() {\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n  \n \n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}","\nexport class Logger {\n  constructor(debug = false) {\n    this.debug = debug;\n    this.prefix = 'CarbonCut:';\n  }\n\n  setDebug(debug) {\n    this.debug = debug;\n  }\n\n  log(...args) {\n    if (this.debug) {\n      console.log(this.prefix, ...args);\n    }\n  }\n\n  warn(...args) {\n    if (this.debug) {\n      console.warn(this.prefix, ...args);\n    }\n  }\n\n  error(...args) {\n    console.error(this.prefix, ...args);\n  }\n\n  info(...args) {\n    if (this.debug) {\n      console.info(this.prefix, ...args);\n    }\n  }\n}","export class ApiTransport {\n  constructor(config, logger) {\n    this.config = config;\n    this.logger = logger;\n    this.queue = [];\n    this.isOnline = typeof navigator !== 'undefined' ? navigator.onLine : true;\n    \n    if (typeof window !== 'undefined') {\n      this.setupOnlineListener();\n    }\n  }\n\n  setupOnlineListener() {\n    window.addEventListener('online', () => {\n      this.isOnline = true;\n      this.logger.log('Connection restored, flushing queue');\n      this.flushQueue();\n    });\n\n    window.addEventListener('offline', () => {\n      this.isOnline = false;\n      this.logger.warn('Connection lost, events will be queued');\n    });\n  }\n\n  async send(payload) {\n    if (!this.isOnline) {\n      this.logger.warn('Offline, queueing event');\n      this.queue.push(payload);\n      return false;\n    }\n\n    const apiUrl = this.config.get('apiUrl');\n    \n    try {\n      if (this.shouldUseSendBeacon(payload.event)) {\n        const success = this.sendViaBeacon(apiUrl, payload);\n        if (success) {\n          this.logger.log('Event sent via sendBeacon:', payload.event);\n          return true;\n        }\n      }\n\n      const response = await this.sendViaFetch(apiUrl, payload);\n      this.logger.log('Event sent via fetch:', payload.event, 'Status:', response.status);\n      return true;\n\n    } catch (error) {\n      this.logger.error('Failed to send event:', error);\n      this.queue.push(payload);\n      return false;\n    }\n  }\n\n  sendViaBeacon(url, payload) {\n    if (typeof navigator === 'undefined' || !navigator.sendBeacon) {\n      return false;\n    }\n\n    try {\n      const blob = new Blob([JSON.stringify(payload)], { \n        type: 'application/json' \n      });\n      return navigator.sendBeacon(url, blob);\n    } catch (error) {\n      this.logger.error('sendBeacon failed:', error);\n      return false;\n    }\n  }\n\n  async sendViaFetch(url, payload) {\n    if (!url.endsWith('/')) {\n      url = url + '/';\n    }\n    \n    this.logger.log('Sending payload to:', url, payload);\n    \n    const response = await fetch(url, {\n      method: 'POST',  // Explicitly set POST\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Tracker-Token': this.config.get('trackerToken')\n      },\n      body: JSON.stringify(payload),\n      keepalive: true,\n      redirect: 'error'  // Don't follow redirects that might change method\n    });\n\n    // Handle responses\n    if (response.status === 202 || response.status === 200) {\n      return response;\n    } else if (response.status === 500) {\n      // Parse error details\n      try {\n        const errorData = await response.json();\n        throw new Error(`API Error: ${errorData.message || 'Unknown error'}`);\n      } catch (parseError) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } else {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n  }\n\n  shouldUseSendBeacon(eventType) {\n    return ['session_end', 'page_unload'].includes(eventType);\n  }\n\n  async flushQueue() {\n    if (this.queue.length === 0) return;\n\n    this.logger.log(`Flushing ${this.queue.length} queued events`);\n    const queue = [...this.queue];\n    this.queue = [];\n\n    for (const payload of queue) {\n      const success = await this.send(payload);\n      if (!success) {\n        this.queue.push(payload);\n      }\n    }\n  }\n\n  getQueueSize() {\n    return this.queue.length;\n  }\n}","export class ApiWorkerTransport {\n  constructor(config, logger) {\n    this.config = config;\n    this.logger = logger;\n    this.worker = null;\n    this.isSupported = this.checkWorkerSupport();\n    this.queueSize = 0;\n    \n    if (this.isSupported) {\n      this.initWorker();\n    } else {\n      this.logger.warn('Web Workers not supported, falling back to main thread');\n    }\n  }\n\n  checkWorkerSupport() {\n    return typeof Worker !== 'undefined';\n  }\n\n  initWorker() {\n    try {\n      const workerCode = this.getWorkerCode();\n      const blob = new Blob([workerCode], { type: 'application/javascript' });\n      const workerUrl = URL.createObjectURL(blob);\n      \n      this.worker = new Worker(workerUrl);\n      \n      this.worker.addEventListener('message', (event) => {\n        this.handleWorkerMessage(event.data);\n      });\n      \n      this.worker.addEventListener('error', (error) => {\n        this.logger.error('Worker error:', error);\n      });\n      \n      this.worker.postMessage({\n        type: 'INIT',\n        payload: {\n          apiUrl: this.config.get('apiUrl'),\n          trackerToken: this.config.get('trackerToken'),\n          batchSize: 10,\n          batchInterval: 5000\n        }\n      });\n      \n      this.setupOnlineListener();\n      \n      this.logger.log('Web Worker initialized for v2 event processing');\n    } catch (error) {\n      this.logger.error('Failed to initialize worker:', error);\n      this.worker = null;\n    }\n  }\n\n  getWorkerCode() {\n    return `\n      let config = null;\n      let eventQueue = [];\n      let flushTimer = null;\n      let isOnline = true;\n\n      self.addEventListener('message', async (event) => {\n        const { type, payload } = event.data;\n\n        switch (type) {\n          case 'INIT':\n            config = payload;\n            if (config.batchInterval) {\n              flushTimer = setInterval(() => {\n                if (eventQueue.length > 0) {\n                  flushQueue();\n                }\n              }, config.batchInterval);\n            }\n            self.postMessage({ type: 'INIT_SUCCESS' });\n            break;\n          \n          case 'TRACK_EVENT':\n            eventQueue.push({ ...payload, queuedAt: Date.now() });\n            if (eventQueue.length >= (config.batchSize || 10)) {\n              flushQueue();\n            }\n            break;\n          \n          case 'FLUSH_QUEUE':\n            await flushQueue();\n            break;\n          \n          case 'ONLINE':\n            isOnline = true;\n            await flushQueue();\n            break;\n          \n          case 'OFFLINE':\n            isOnline = false;\n            break;\n          \n          case 'GET_QUEUE_SIZE':\n            self.postMessage({ type: 'QUEUE_SIZE', size: eventQueue.length });\n            break;\n        }\n      });\n\n      async function flushQueue() {\n        if (eventQueue.length === 0 || !isOnline) return;\n        \n        const batch = [...eventQueue];\n        eventQueue = [];\n        \n        try {\n          // Send individual events\n          for (const event of batch) {\n            // Ensure URL always has trailing slash\n            let url = config.apiUrl;\n            if (!url.endsWith('/')) {\n              url = url + '/';\n            }\n            \n            const response = await fetch(url, {\n              method: 'POST',  // Explicitly set POST\n              headers: {\n                'Content-Type': 'application/json',\n                'X-Tracker-Token': config.trackerToken\n              },\n              body: JSON.stringify(event),\n              keepalive: true,\n              redirect: 'error'  // Don't follow redirects\n            });\n            \n            if (response.status !== 202 && response.status !== 200) {\n              throw new Error(\\`HTTP \\${response.status}\\`);\n            }\n          }\n          \n          self.postMessage({ type: 'FLUSH_SUCCESS', count: batch.length });\n        } catch (error) {\n          eventQueue.push(...batch);\n          self.postMessage({ type: 'FLUSH_ERROR', error: error.message, count: batch.length });\n        }\n      }\n    `;\n  }\n\n  handleWorkerMessage(data) {\n    const { type, count, error, size } = data;\n    \n    switch (type) {\n      case 'INIT_SUCCESS':\n        this.logger.log('Worker ready for v2 API');\n        break;\n      \n      case 'FLUSH_SUCCESS':\n        this.logger.log(`Worker flushed ${count} v2 events`);\n        break;\n      \n      case 'FLUSH_ERROR':\n        this.logger.error(`Worker flush failed: ${error}`);\n        break;\n      \n      case 'QUEUE_SIZE':\n        this.queueSize = size;\n        break;\n    }\n  }\n\n  setupOnlineListener() {\n    window.addEventListener('online', () => {\n      this.worker?.postMessage({ type: 'ONLINE' });\n    });\n\n    window.addEventListener('offline', () => {\n      this.worker?.postMessage({ type: 'OFFLINE' });\n    });\n  }\n\n  async send(payload) {\n    if (!this.worker) {\n      return this.sendDirect(payload);\n    }\n    \n    this.worker.postMessage({\n      type: 'TRACK_EVENT',\n      payload\n    });\n    \n    return true;\n  }\n\n  async sendDirect(payload) {\n    try {\n      const response = await fetch(this.config.get('apiUrl'), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Tracker-Token': this.config.get('trackerToken')\n        },\n        body: JSON.stringify(payload),\n        keepalive: true\n      });\n      \n      return response.status === 202;\n    } catch (error) {\n      this.logger.error('Direct send failed:', error);\n      return false;\n    }\n  }\n\n  async flushQueue() {\n    this.worker?.postMessage({ type: 'FLUSH_QUEUE' });\n  }\n\n  getQueueSize() {\n    if (!this.worker) return 0;\n    \n    this.worker.postMessage({ type: 'GET_QUEUE_SIZE' });\n    return this.queueSize;\n  }\n\n  terminate() {\n    if (this.worker) {\n      this.worker.terminate();\n      this.worker = null;\n      this.logger.log('Worker terminated');\n    }\n  }\n}","/**\n * Extract UTM parameters from URL or provide defaults\n * @returns {Object} UTM parameters object\n */\nexport function getUTMParams() {\n  if (typeof window === 'undefined') {\n    return getDefaultUTMParams();\n  }\n\n  const urlParams = new URLSearchParams(window.location.search);\n  \n  return {\n    utm_campaign: urlParams.get('utm_campaign') || getSessionStorage('utm_campaign') || 'direct',\n    utm_source: urlParams.get('utm_source') || getSessionStorage('utm_source') || 'direct',\n    utm_medium: urlParams.get('utm_medium') || getSessionStorage('utm_medium') || 'none',\n    utm_term: urlParams.get('utm_term') || getSessionStorage('utm_term') || '',\n    utm_content: urlParams.get('utm_content') || getSessionStorage('utm_content') || ''\n  };\n}\n\n/**\n * Store UTM parameters in session storage for persistence\n * @param {Object} utmParams UTM parameters\n */\nexport function storeUTMParams(utmParams) {\n  if (typeof window === 'undefined') return;\n\n  Object.entries(utmParams).forEach(([key, value]) => {\n    if (value && value !== 'direct' && value !== 'none') {\n      try {\n        sessionStorage.setItem(key, value);\n      } catch (e) {\n        // Silent fail if sessionStorage is not available\n      }\n    }\n  });\n}\n\n/**\n * Get UTM parameter from session storage\n * @param {string} key Parameter key\n * @returns {string|null} Parameter value\n */\nfunction getSessionStorage(key) {\n  if (typeof window === 'undefined') return null;\n  \n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Get default UTM parameters for server-side or fallback\n * @returns {Object} Default UTM parameters\n */\nfunction getDefaultUTMParams() {\n  return {\n    utm_campaign: 'direct',\n    utm_source: 'direct',\n    utm_medium: 'none',\n    utm_term: '',\n    utm_content: ''\n  };\n}\n\n/**\n * Generate unique event ID\n * @returns {string} Unique event ID\n */\nexport function generateEventId() {\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n  \n  return 'evt_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n}","import { getUTMParams, storeUTMParams, generateEventId } from '../utils/utm.js';\n\nexport class EventTracker {\n  constructor(config, session, transport, logger) {\n    this.config = config;\n    this.session = session;\n    this.transport = transport;\n    this.logger = logger;\n    this.sentEvents = new Map();\n    this.utmParams = null;\n    \n    // Initialize and store UTM parameters\n    this.initializeUTMParams();\n  }\n\n  /**\n   * Initialize UTM parameters from URL\n   */\n  initializeUTMParams() {\n    this.utmParams = getUTMParams();\n    storeUTMParams(this.utmParams);\n    this.logger.log('UTM parameters initialized:', this.utmParams);\n  }\n\n  /**\n   * Send event with new v2 format\n   * @param {string} event Event type\n   * @param {Object} data Additional event data\n   */\n  send(event, data = {}) {\n    if (!this.session.isActive()) {\n      this.logger.error('Cannot send event without active session');\n      return;\n    }\n\n    // Map event types to v2 format\n    const eventTypeMapping = {\n      'session_start': 'page_view',\n      'page_view': 'page_view', \n      'ping': 'page_view',\n      'custom_event': 'click',\n      'session_end': 'conversion',\n      'button_click': 'click',\n      'form_submit': 'conversion'\n    };\n\n    const mappedEventType = eventTypeMapping[event] || 'click';\n    const eventId = generateEventId();\n\n    // Build v2 payload format\n    const payload = {\n      event: mappedEventType, // Maps to event_type in backend\n      session_id: this.session.getId(),\n      timestamp: new Date().toISOString(), // Maps to event_time in backend\n      tracker_token: this.config.get('trackerToken'), // Maps to api_key in backend\n      utm_params: this.utmParams, // MANDATORY for campaign resolution\n      event_id: eventId,\n      user_id: data.user_id || this.session.getId(), // Use session as fallback\n      page_url: typeof window !== 'undefined' ? window.location.href : data.page_url || '',\n      referrer: typeof document !== 'undefined' ? document.referrer : data.referrer || '',\n      ...data // Additional event-specific data\n    };\n\n    // Prevent duplicate events\n    const eventKey = `${event}_${payload.timestamp}_${JSON.stringify(data)}`;\n    \n    if (this.sentEvents.has(eventKey)) {\n      this.logger.warn('Duplicate event prevented:', event);\n      return;\n    }\n\n    this.sentEvents.set(eventKey, Date.now());\n    \n    // Clean up old entries after 2 seconds\n    setTimeout(() => {\n      this.sentEvents.delete(eventKey);\n    }, 2000);\n\n    this.logger.log('Sending v2 event:', payload);\n    this.transport.send(payload);\n  }\n\n  /**\n   * Track custom event with v2 format\n   * @param {string} eventName Custom event name\n   * @param {Object} data Event data\n   */\n  trackCustomEvent(eventName, data = {}) {\n    this.send('custom_event', {\n      event_name: eventName,\n      event_data: data,\n      custom_event_type: eventName,\n      ...data\n    });\n    \n    this.logger.log('Custom event tracked:', eventName);\n  }\n\n  /**\n   * Update UTM parameters (e.g., for SPA navigation)\n   */\n  refreshUTMParams() {\n    this.utmParams = getUTMParams();\n    storeUTMParams(this.utmParams);\n    this.logger.log('UTM parameters refreshed:', this.utmParams);\n  }\n}","\nexport class PingTracker {\n  constructor(config, state, eventTracker, logger) {\n    this.config = config;\n    this.state = state;\n    this.eventTracker = eventTracker;\n    this.logger = logger;\n    this.timer = null;\n  }\n\n  \n  start() {\n    this.stop();\n\n    const interval = this.config.get('pingInterval');\n    \n    this.timer = setInterval(() => {\n      const seconds = interval / 1000;\n      this.state.incrementTimeSpent(seconds);\n      this.ping();\n    }, interval);\n\n    this.logger.log(`Ping timer started. Interval: ${interval / 1000}s`);\n  }\n\n  \n  stop() {\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n      this.logger.log('Ping timer stopped');\n    }\n  }\n\n  \n  ping() {\n    this.eventTracker.send('ping', {\n      time_spent_seconds: this.state.get('timeSpent'),\n      page_url: typeof window !== 'undefined' ? window.location.href : null,\n      is_visible: typeof document !== 'undefined' ? !document.hidden : true\n    });\n  }\n\n  \n  trigger() {\n    this.ping();\n  }\n\n  \n  isRunning() {\n    return this.timer !== null;\n  }\n}","import { getPageInfo } from '../utils/helpers.js';\n\n\nexport class PageViewTracker {\n  constructor(config, state, eventTracker, logger) {\n    this.config = config;\n    this.state = state;\n    this.eventTracker = eventTracker;\n    this.logger = logger;\n  }\n\n  \n  track(pagePath) {\n    const pageInfo = getPageInfo();\n    \n    if (pagePath) {\n      pageInfo.page_path = pagePath;\n    }\n\n    this.eventTracker.send('page_view', pageInfo);\n    this.state.set('lastPath', pageInfo.page_path);\n    this.logger.log('Page view tracked:', pageInfo.page_path);\n  }\n}","export class BrowserListeners {\n  constructor(config, state, session, eventTracker, pingTracker, pageViewTracker, logger) {\n    this.config = config;\n    this.state = state;\n    this.session = session;\n    this.eventTracker = eventTracker;\n    this.pingTracker = pingTracker;\n    this.pageViewTracker = pageViewTracker;\n    this.logger = logger;\n  }\n\n  setup() {\n    if (typeof window === 'undefined') return;\n\n    this.setupUnloadListener();\n    this.setupVisibilityListener();\n    \n    this.setupClickTracking();\n    \n    if (this.config.get('autoTrack')) {\n      this.setupNavigationListeners();\n    }\n  }\n\n  setupUnloadListener() {\n    window.addEventListener('beforeunload', () => {\n      this.pingTracker.stop();\n      this.eventTracker.send('session_end', {\n        total_time_spent_seconds: this.state.get('timeSpent'),\n        page_url: window.location.href\n      });\n      this.session.end();\n    });\n  }\n\n  setupVisibilityListener() {\n    document.addEventListener('visibilitychange', () => {\n      if (document.hidden) {\n        this.pingTracker.stop();\n        this.logger.log('Page hidden, ping timer paused');\n      } else {\n        this.pingTracker.start();\n        this.logger.log('Page visible, ping timer resumed');\n      }\n    });\n  }\n\n  setupClickTracking() {\n    document.addEventListener('click', (e) => {\n      const target = e.target;\n      \n      const elementInfo = {\n        tag: target.tagName.toLowerCase(),\n        id: target.id || null,\n        class: target.className || null,\n        text: target.innerText?.substring(0, 100) || null,\n        href: target.href || null\n      };\n\n      if (target.tagName === 'BUTTON' || target.closest('button')) {\n        this.eventTracker.send('button_click', {\n          ...elementInfo,\n          button_type: target.type || 'button'\n        });\n        this.logger.log('Button click tracked:', elementInfo);\n      }\n      \n      else if (target.tagName === 'A' || target.closest('a')) {\n        this.eventTracker.send('custom_event', {\n          event_name: 'link_click',\n          ...elementInfo,\n          external: target.hostname !== window.location.hostname\n        });\n        this.logger.log('Link click tracked:', elementInfo);\n      }\n      \n      else if (target.tagName === 'INPUT' && target.type === 'submit') {\n        this.eventTracker.send('form_submit', {\n          ...elementInfo,\n          form_id: target.form?.id || null,\n          form_name: target.form?.name || null\n        });\n        this.logger.log('Form submit tracked:', elementInfo);\n      }\n    }, true);\n\n    this.logger.log('Automatic click tracking enabled');\n  }\n\n  setupNavigationListeners() {\n    this.state.set('lastPath', window.location.pathname);\n\n    const checkPathChange = () => {\n      const currentPath = window.location.pathname;\n      const lastPath = this.state.get('lastPath');\n      \n      if (currentPath !== lastPath) {\n        this.pageViewTracker.track(currentPath);\n      }\n    };\n\n    window.addEventListener('popstate', checkPathChange);\n\n    const originalPushState = history.pushState;\n    const originalReplaceState = history.replaceState;\n\n    history.pushState = function() {\n      originalPushState.apply(this, arguments);\n      checkPathChange();\n    };\n\n    history.replaceState = function() {\n      originalReplaceState.apply(this, arguments);\n      checkPathChange();\n    };\n\n    this.logger.log('SPA navigation tracking enabled');\n  }\n}","import { Config } from './core/config.js';\nimport { State } from './core/state.js';\nimport { Session } from './core/session.js';\nimport { Logger } from './utils/logger.js';\nimport { ApiTransport } from './transport/api.js';\nimport { ApiWorkerTransport } from './transport/api-worker.js';\nimport { EventTracker } from './tracking/event.js';\nimport { PingTracker } from './tracking/ping.js';\nimport { PageViewTracker } from './tracking/pageview.js';\nimport { BrowserListeners } from './listeners/browser.js';\nimport { getBrowserMetadata, isBrowser } from './utils/helpers.js';\n\n\nclass CarbonCutSDK {\n  constructor() {\n    this.logger = new Logger(false);\n    this.config = new Config();\n    this.state = new State();\n    this.session = null;\n    this.transport = null;\n    this.eventTracker = null;\n    this.pingTracker = null;\n    this.pageViewTracker = null;\n    this.browserListeners = null;\n    this.autoInitAttempted = false;\n  }\n\n  \n  getScriptConfig() {\n    if (typeof document === 'undefined') return null;\n\n    const scripts = document.getElementsByTagName('script');\n    let scriptConfig = null;\n\n    for (let script of scripts) {\n      const src = script.getAttribute('src');\n      \n      if (src && (src.includes('carboncut.min.js') || src.includes('carboncut.js'))) {\n        // Get base URL from data attribute\n        let apiUrl = script.getAttribute('data-api-url') || 'http://127.0.0.1:8000/api/v1/events/';\n        \n        // Ensure trailing slash\n        if (!apiUrl.endsWith('/')) {\n          apiUrl += '/';\n        }\n        \n        scriptConfig = {\n          trackerToken: script.getAttribute('data-token') || script.getAttribute('data-tracker-token'),\n          apiUrl: apiUrl,\n          debug: script.getAttribute('data-debug') === 'true',\n          domain: script.getAttribute('data-domain') || window.location.hostname,\n          useWorker: script.getAttribute('data-use-worker') !== 'false'\n        };\n        break;\n      }\n    }\n\n    return scriptConfig;\n  }\n\n  \n  autoInit() {\n   \n    if (this.autoInitAttempted || this.isInitializing) {\n      this.logger.warn('Auto-init already attempted or in progress');\n      return;\n    }\n    \n    this.autoInitAttempted = true;\n    this.isInitializing = true;\n\n    const scriptConfig = this.getScriptConfig();\n    \n    if (!scriptConfig || !scriptConfig.trackerToken) {\n      console.error('CarbonCut: No tracker token found. Add data-token attribute to script tag.');\n      this.isInitializing = false;\n      return;\n    }\n\n    this.init(scriptConfig);\n    this.isInitializing = false;\n  }\n\n  \n  init(options = {}) {\n    if (!isBrowser()) {\n      this.logger.error('CarbonCut SDK can only be initialized in a browser environment');\n      return false;\n    }\n\n    if (this.state.get('isInitialized')) {\n      this.logger.warn('CarbonCut is already initialized');\n      return false;\n    }\n\n    if (!this.config.init(options)) {\n      return false;\n    }\n\n    this.logger.setDebug(this.config.get('debug'));\n\n    if (this.config.get('respectDoNotTrack') && navigator.doNotTrack === '1') {\n      this.logger.warn('Do Not Track is enabled, tracking disabled');\n      return false;\n    }\n\n    this.session = new Session(this.config, this.logger);\n    \n    const useWorker = this.config.get('useWorker') !== false;\n    \n    if (useWorker && typeof Worker !== 'undefined') {\n      this.transport = new ApiWorkerTransport(this.config, this.logger);\n      this.logger.log('Using Web Worker for v2 event processing');\n    } else {\n      this.transport = new ApiTransport(this.config, this.logger);\n      this.logger.log('Using main thread for v2 event processing');\n    }\n    \n    this.eventTracker = new EventTracker(this.config, this.session, this.transport, this.logger);\n    this.pingTracker = new PingTracker(this.config, this.state, this.eventTracker, this.logger);\n    this.pageViewTracker = new PageViewTracker(this.config, this.state, this.eventTracker, this.logger);\n    this.browserListeners = new BrowserListeners(\n      this.config,\n      this.state,\n      this.session,\n      this.eventTracker,\n      this.pingTracker,\n      this.pageViewTracker,\n      this.logger\n    );\n\n    this.session.start();\n    this.eventTracker.send('session_start', getBrowserMetadata());\n    this.pingTracker.start();\n    this.browserListeners.setup();\n    this.state.set('isInitialized', true);\n\n    this.logger.log('CarbonCut SDK v2 initialized successfully', {\n      sessionId: this.session.getId(),\n      trackerToken: this.config.get('trackerToken'),\n      workerEnabled: useWorker,\n      apiVersion: 'v2'\n    });\n\n    return true;\n  }\n\n  \n  trackEvent(eventName, data = {}) {\n    if (!this.state.get('isInitialized')) {\n      this.logger.error('SDK not initialized. Call init() first');\n      return;\n    }\n\n    this.eventTracker.trackCustomEvent(eventName, data);\n  }\n\n  \n  trackPageView(pagePath) {\n    if (!this.state.get('isInitialized')) {\n      this.logger.error('SDK not initialized. Call init() first');\n      return;\n    }\n\n    this.pageViewTracker.track(pagePath);\n  }\n\n  \n  ping() {\n    if (!this.state.get('isInitialized')) {\n      this.logger.error('SDK not initialized. Call init() first');\n      return;\n    }\n\n    this.pingTracker.trigger();\n  }\n\n  \n  getSessionInfo() {\n    return {\n      sessionId: this.session?.getId() || null,\n      trackerToken: this.config.get('trackerToken'),\n      timeSpent: this.state.get('timeSpent'),\n      isInitialized: this.state.get('isInitialized'),\n      queueSize: this.transport?.getQueueSize() || 0,\n      apiVersion: 'v2',\n      utmParams: this.eventTracker?.utmParams || null\n    };\n  }\n\n  \n  enableDebug() {\n    this.logger.setDebug(true);\n    this.config.set('debug', true);\n  }\n\n  \n  disableDebug() {\n    this.logger.setDebug(false);\n    this.config.set('debug', false);\n  }\n\n  \n  destroy() {\n    this.pingTracker?.stop();\n    this.transport?.terminate?.();\n    this.session?.end();\n    this.state.reset();\n    this.logger.log('SDK destroyed');\n  }\n}\n\nconst carbonCut = new CarbonCutSDK();\n\nif (typeof document !== 'undefined') {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      carbonCut.autoInit();\n    }, { once: true });\n  } else {\n    carbonCut.autoInit();\n  }\n}\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = carbonCut;\n}\n\nif (typeof window !== 'undefined') {\n  window.CarbonCut = carbonCut;\n}\n\nexport default carbonCut;"],"names":["getTrackerFromURL","window","URLSearchParams","location","search","get","Config","constructor","this","defaults","trackerToken","apiUrl","sessionId","pingInterval","debug","autoTrack","respectDoNotTrack","maxRetries","retryDelay","domain","config","init","options","validate","console","error","key","set","value","getAll","State","state","isInitialized","timeSpent","lastPath","retryCount","incrementTimeSpent","seconds","reset","Session","logger","start","crypto","randomUUID","replace","c","r","Math","random","toString","__CC_SESSION_ID","__CC_TRACKER_TOKEN","log","getId","end","isActive","Logger","prefix","setDebug","args","warn","info","ApiTransport","queue","isOnline","navigator","onLine","setupOnlineListener","addEventListener","flushQueue","send","payload","push","shouldUseSendBeacon","event","sendViaBeacon","response","sendViaFetch","status","url","sendBeacon","blob","Blob","JSON","stringify","type","endsWith","fetch","method","headers","body","keepalive","redirect","Error","errorData","json","message","parseError","eventType","includes","length","getQueueSize","ApiWorkerTransport","worker","isSupported","checkWorkerSupport","queueSize","initWorker","Worker","workerCode","getWorkerCode","workerUrl","URL","createObjectURL","handleWorkerMessage","data","postMessage","batchSize","batchInterval","count","size","sendDirect","terminate","getUTMParams","utm_campaign","utm_source","utm_medium","utm_term","utm_content","urlParams","getSessionStorage","storeUTMParams","utmParams","Object","entries","forEach","sessionStorage","setItem","e","getItem","EventTracker","session","transport","sentEvents","Map","initializeUTMParams","mappedEventType","session_start","page_view","ping","custom_event","session_end","button_click","form_submit","eventId","Date","now","substr","session_id","timestamp","toISOString","tracker_token","utm_params","event_id","user_id","page_url","href","referrer","document","eventKey","has","setTimeout","delete","trackCustomEvent","eventName","event_name","event_data","custom_event_type","refreshUTMParams","PingTracker","eventTracker","timer","stop","interval","setInterval","clearInterval","time_spent_seconds","is_visible","hidden","trigger","isRunning","PageViewTracker","track","pagePath","pageInfo","page_path","pathname","page_title","title","BrowserListeners","pingTracker","pageViewTracker","setup","setupUnloadListener","setupVisibilityListener","setupClickTracking","setupNavigationListeners","total_time_spent_seconds","target","elementInfo","tag","tagName","toLowerCase","id","class","className","text","innerText","substring","closest","button_type","external","hostname","form_id","form","form_name","name","checkPathChange","currentPath","originalPushState","history","pushState","originalReplaceState","replaceState","apply","arguments","carbonCut","browserListeners","autoInitAttempted","getScriptConfig","scripts","getElementsByTagName","scriptConfig","script","src","getAttribute","useWorker","autoInit","isInitializing","doNotTrack","user_agent","userAgent","screen_resolution","screen","width","height","viewport_size","innerWidth","innerHeight","language","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","workerEnabled","apiVersion","trackEvent","trackPageView","getSessionInfo","enableDebug","disableDebug","destroy","readyState","once","module","exports","CarbonCut"],"mappings":"sCACO,SAASA,IACd,GAAsB,oBAAXC,OAAwB,OAAO,KAE1C,OADe,IAAIC,gBAAgBD,OAAOE,SAASC,QACrCC,IAAI,aACpB,CCFO,MAAMC,EACX,WAAAC,GACEC,KAAKC,SAAW,CACdC,aAAc,KAEdC,OAAQ,uCACRC,UAAW,KACXC,aAAc,KACdC,OAAO,EACPC,WAAW,EACXC,mBAAmB,EACnBC,WAAY,EACZC,WAAY,IACZC,OAAQ,MAGVX,KAAKY,OAAS,IAAKZ,KAAKC,SACzB,CAGD,IAAAY,CAAKC,EAAU,IAOb,OANAd,KAAKY,OAAS,IACTZ,KAAKC,YACLa,EACHZ,aAAcY,EAAQZ,cAAgBV,KAGjCQ,KAAKe,UACb,CAGD,QAAAA,GACE,OAAKf,KAAKY,OAAOV,eAKZF,KAAKY,OAAOT,SACfa,QAAQC,MAAM,mCACP,IANPD,QAAQC,MAAM,qFACP,EASV,CAGD,GAAApB,CAAIqB,GACF,OAAOlB,KAAKY,OAAOM,EACpB,CAGD,GAAAC,CAAID,EAAKE,GACPpB,KAAKY,OAAOM,GAAOE,CACpB,CAGD,MAAAC,GACE,MAAO,IAAKrB,KAAKY,OAClB,EC5DI,MAAMU,EACX,WAAAvB,GACEC,KAAKuB,MAAQ,CACXC,eAAe,EACfC,UAAW,EACXC,SAAU,KACVC,WAAY,EAEf,CAGD,GAAA9B,CAAIqB,GACF,OAAOlB,KAAKuB,MAAML,EACnB,CAGD,GAAAC,CAAID,EAAKE,GACPpB,KAAKuB,MAAML,GAAOE,CACnB,CAGD,kBAAAQ,CAAmBC,GACjB7B,KAAKuB,MAAME,WAAaI,CACzB,CAGD,KAAAC,GACE9B,KAAKuB,MAAQ,CACXC,eAAe,EACfC,UAAW,EACXC,SAAU,KACVC,WAAY,EAEf,CAGD,MAAAN,GACE,MAAO,IAAKrB,KAAKuB,MAClB,ECpCI,MAAMQ,EACX,WAAAhC,CAAYa,EAAQoB,GAClBhC,KAAKY,OAASA,EACdZ,KAAKgC,OAASA,EACdhC,KAAKI,UAAY,IAClB,CAGD,KAAA6B,GAWE,OAVAjC,KAAKI,UCVe,oBAAX8B,QAA0BA,OAAOC,WACnCD,OAAOC,aAIT,uCAAuCC,QAAQ,QAAS,SAASC,GACtE,MAAMC,EAAoB,GAAhBC,KAAKC,SAAgB,EAE/B,OADgB,MAANH,EAAYC,EAAS,EAAJA,EAAU,GAC5BG,SAAS,GACtB,GDEIzC,KAAKY,OAAOO,IAAI,YAAanB,KAAKI,WAGZ,oBAAXX,SACTA,OAAOiD,gBAAkB1C,KAAKI,UAC9BX,OAAOkD,mBAAqB3C,KAAKY,OAAOf,IAAI,iBAG9CG,KAAKgC,OAAOY,IAAI,mBAAoB5C,KAAKI,WAClCJ,KAAKI,SACb,CAGD,KAAAyC,GACE,OAAO7C,KAAKI,SACb,CAGD,GAAA0C,GACE9C,KAAKgC,OAAOY,IAAI,iBAAkB5C,KAAKI,WACvCJ,KAAKI,UAAY,KACjBJ,KAAKY,OAAOO,IAAI,YAAa,KAC9B,CAGD,QAAA4B,GACE,OAA0B,OAAnB/C,KAAKI,SACb,EEvCI,MAAM4C,EACX,WAAAjD,CAAYO,GAAQ,GAClBN,KAAKM,MAAQA,EACbN,KAAKiD,OAAS,YACf,CAED,QAAAC,CAAS5C,GACPN,KAAKM,MAAQA,CACd,CAED,GAAAsC,IAAOO,GACDnD,KAAKM,OACPU,QAAQ4B,IAAI5C,KAAKiD,UAAWE,EAE/B,CAED,IAAAC,IAAQD,GACFnD,KAAKM,OACPU,QAAQoC,KAAKpD,KAAKiD,UAAWE,EAEhC,CAED,KAAAlC,IAASkC,GACPnC,QAAQC,MAAMjB,KAAKiD,UAAWE,EAC/B,CAED,IAAAE,IAAQF,GACFnD,KAAKM,OACPU,QAAQqC,KAAKrD,KAAKiD,UAAWE,EAEhC,EC/BI,MAAMG,EACX,WAAAvD,CAAYa,EAAQoB,GAClBhC,KAAKY,OAASA,EACdZ,KAAKgC,OAASA,EACdhC,KAAKuD,MAAQ,GACbvD,KAAKwD,SAAgC,oBAAdC,WAA4BA,UAAUC,OAEvC,oBAAXjE,QACTO,KAAK2D,qBAER,CAED,mBAAAA,GACElE,OAAOmE,iBAAiB,SAAU,KAChC5D,KAAKwD,UAAW,EAChBxD,KAAKgC,OAAOY,IAAI,uCAChB5C,KAAK6D,eAGPpE,OAAOmE,iBAAiB,UAAW,KACjC5D,KAAKwD,UAAW,EAChBxD,KAAKgC,OAAOoB,KAAK,2CAEpB,CAED,UAAMU,CAAKC,GACT,IAAK/D,KAAKwD,SAGR,OAFAxD,KAAKgC,OAAOoB,KAAK,2BACjBpD,KAAKuD,MAAMS,KAAKD,IACT,EAGT,MAAM5D,EAASH,KAAKY,OAAOf,IAAI,UAE/B,IACE,GAAIG,KAAKiE,oBAAoBF,EAAQG,OAAQ,CAE3C,GADgBlE,KAAKmE,cAAchE,EAAQ4D,GAGzC,OADA/D,KAAKgC,OAAOY,IAAI,6BAA8BmB,EAAQG,QAC/C,CAEV,CAED,MAAME,QAAiBpE,KAAKqE,aAAalE,EAAQ4D,GAEjD,OADA/D,KAAKgC,OAAOY,IAAI,wBAAyBmB,EAAQG,MAAO,UAAWE,EAASE,SACrE,CAER,CAAC,MAAOrD,GAGP,OAFAjB,KAAKgC,OAAOf,MAAM,wBAAyBA,GAC3CjB,KAAKuD,MAAMS,KAAKD,IACT,CACR,CACF,CAED,aAAAI,CAAcI,EAAKR,GACjB,GAAyB,oBAAdN,YAA8BA,UAAUe,WACjD,OAAO,EAGT,IACE,MAAMC,EAAO,IAAIC,KAAK,CAACC,KAAKC,UAAUb,IAAW,CAC/Cc,KAAM,qBAER,OAAOpB,UAAUe,WAAWD,EAAKE,EAClC,CAAC,MAAOxD,GAEP,OADAjB,KAAKgC,OAAOf,MAAM,qBAAsBA,IACjC,CACR,CACF,CAED,kBAAMoD,CAAaE,EAAKR,GACjBQ,EAAIO,SAAS,OAChBP,GAAY,KAGdvE,KAAKgC,OAAOY,IAAI,sBAAuB2B,EAAKR,GAE5C,MAAMK,QAAiBW,MAAMR,EAAK,CAChCS,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,kBAAmBjF,KAAKY,OAAOf,IAAI,iBAErCqF,KAAMP,KAAKC,UAAUb,GACrBoB,WAAW,EACXC,SAAU,UAIZ,GAAwB,MAApBhB,EAASE,QAAsC,MAApBF,EAASE,OACtC,OAAOF,EACF,GAAwB,MAApBA,EAASE,OASlB,MAAM,IAAIe,MAAM,uBAAuBjB,EAASE,UAPhD,IACE,MAAMgB,QAAkBlB,EAASmB,OACjC,MAAM,IAAIF,MAAM,cAAcC,EAAUE,SAAW,kBACpD,CAAC,MAAOC,GACP,MAAM,IAAIJ,MAAM,uBAAuBjB,EAASE,SACjD,CAIJ,CAED,mBAAAL,CAAoByB,GAClB,MAAO,CAAC,cAAe,eAAeC,SAASD,EAChD,CAED,gBAAM7B,GACJ,GAA0B,IAAtB7D,KAAKuD,MAAMqC,OAAc,OAE7B5F,KAAKgC,OAAOY,IAAI,YAAY5C,KAAKuD,MAAMqC,wBACvC,MAAMrC,EAAQ,IAAIvD,KAAKuD,OACvBvD,KAAKuD,MAAQ,GAEb,IAAK,MAAMQ,KAAWR,EAAO,OACLvD,KAAK8D,KAAKC,IAE9B/D,KAAKuD,MAAMS,KAAKD,EAEnB,CACF,CAED,YAAA8B,GACE,OAAO7F,KAAKuD,MAAMqC,MACnB,EC7HI,MAAME,EACX,WAAA/F,CAAYa,EAAQoB,GAClBhC,KAAKY,OAASA,EACdZ,KAAKgC,OAASA,EACdhC,KAAK+F,OAAS,KACd/F,KAAKgG,YAAchG,KAAKiG,qBACxBjG,KAAKkG,UAAY,EAEblG,KAAKgG,YACPhG,KAAKmG,aAELnG,KAAKgC,OAAOoB,KAAK,yDAEpB,CAED,kBAAA6C,GACE,MAAyB,oBAAXG,MACf,CAED,UAAAD,GACE,IACE,MAAME,EAAarG,KAAKsG,gBAClB7B,EAAO,IAAIC,KAAK,CAAC2B,GAAa,CAAExB,KAAM,2BACtC0B,EAAYC,IAAIC,gBAAgBhC,GAEtCzE,KAAK+F,OAAS,IAAIK,OAAOG,GAEzBvG,KAAK+F,OAAOnC,iBAAiB,UAAYM,IACvClE,KAAK0G,oBAAoBxC,EAAMyC,QAGjC3G,KAAK+F,OAAOnC,iBAAiB,QAAU3C,IACrCjB,KAAKgC,OAAOf,MAAM,gBAAiBA,KAGrCjB,KAAK+F,OAAOa,YAAY,CACtB/B,KAAM,OACNd,QAAS,CACP5D,OAAQH,KAAKY,OAAOf,IAAI,UACxBK,aAAcF,KAAKY,OAAOf,IAAI,gBAC9BgH,UAAW,GACXC,cAAe,OAInB9G,KAAK2D,sBAEL3D,KAAKgC,OAAOY,IAAI,iDACjB,CAAC,MAAO3B,GACPjB,KAAKgC,OAAOf,MAAM,+BAAgCA,GAClDjB,KAAK+F,OAAS,IACf,CACF,CAED,aAAAO,GACE,MAAO,0mFAsFR,CAED,mBAAAI,CAAoBC,GAClB,MAAM9B,KAAEA,EAAIkC,MAAEA,EAAK9F,MAAEA,EAAK+F,KAAEA,GAASL,EAErC,OAAQ9B,GACN,IAAK,eACH7E,KAAKgC,OAAOY,IAAI,2BAChB,MAEF,IAAK,gBACH5C,KAAKgC,OAAOY,IAAI,kBAAkBmE,eAClC,MAEF,IAAK,cACH/G,KAAKgC,OAAOf,MAAM,wBAAwBA,KAC1C,MAEF,IAAK,aACHjB,KAAKkG,UAAYc,EAGtB,CAED,mBAAArD,GACElE,OAAOmE,iBAAiB,SAAU,KAChC5D,KAAK+F,QAAQa,YAAY,CAAE/B,KAAM,aAGnCpF,OAAOmE,iBAAiB,UAAW,KACjC5D,KAAK+F,QAAQa,YAAY,CAAE/B,KAAM,aAEpC,CAED,UAAMf,CAAKC,GACT,OAAK/D,KAAK+F,QAIV/F,KAAK+F,OAAOa,YAAY,CACtB/B,KAAM,cACNd,aAGK,GARE/D,KAAKiH,WAAWlD,EAS1B,CAED,gBAAMkD,CAAWlD,GACf,IAWE,OAA2B,aAVJgB,MAAM/E,KAAKY,OAAOf,IAAI,UAAW,CACtDmF,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,kBAAmBjF,KAAKY,OAAOf,IAAI,iBAErCqF,KAAMP,KAAKC,UAAUb,GACrBoB,WAAW,KAGGb,MACjB,CAAC,MAAOrD,GAEP,OADAjB,KAAKgC,OAAOf,MAAM,sBAAuBA,IAClC,CACR,CACF,CAED,gBAAM4C,GACJ7D,KAAK+F,QAAQa,YAAY,CAAE/B,KAAM,eAClC,CAED,YAAAgB,GACE,OAAK7F,KAAK+F,QAEV/F,KAAK+F,OAAOa,YAAY,CAAE/B,KAAM,mBACzB7E,KAAKkG,WAHa,CAI1B,CAED,SAAAgB,GACMlH,KAAK+F,SACP/F,KAAK+F,OAAOmB,YACZlH,KAAK+F,OAAS,KACd/F,KAAKgC,OAAOY,IAAI,qBAEnB,EC5NI,SAASuE,IACd,GAAsB,oBAAX1H,OACT,MAoDK,CACL2H,aAAc,SACdC,WAAY,SACZC,WAAY,OACZC,SAAU,GACVC,YAAa,IAtDf,MAAMC,EAAY,IAAI/H,gBAAgBD,OAAOE,SAASC,QAEtD,MAAO,CACLwH,aAAcK,EAAU5H,IAAI,iBAAmB6H,EAAkB,iBAAmB,SACpFL,WAAYI,EAAU5H,IAAI,eAAiB6H,EAAkB,eAAiB,SAC9EJ,WAAYG,EAAU5H,IAAI,eAAiB6H,EAAkB,eAAiB,OAC9EH,SAAUE,EAAU5H,IAAI,aAAe6H,EAAkB,aAAe,GACxEF,YAAaC,EAAU5H,IAAI,gBAAkB6H,EAAkB,gBAAkB,GAErF,CAMO,SAASC,EAAeC,GACP,oBAAXnI,QAEXoI,OAAOC,QAAQF,GAAWG,QAAQ,EAAE7G,EAAKE,MACvC,GAAIA,GAAmB,WAAVA,GAAgC,SAAVA,EACjC,IACE4G,eAAeC,QAAQ/G,EAAKE,EAC7B,CAAC,MAAO8G,GAER,GAGP,CAOA,SAASR,EAAkBxG,GACzB,GAAsB,oBAAXzB,OAAwB,OAAO,KAE1C,IACE,OAAOuI,eAAeG,QAAQjH,EAC/B,CAAC,MAAOgH,GACP,OAAO,IACR,CACH,CCjDO,MAAME,EACX,WAAArI,CAAYa,EAAQyH,EAASC,EAAWtG,GACtChC,KAAKY,OAASA,EACdZ,KAAKqI,QAAUA,EACfrI,KAAKsI,UAAYA,EACjBtI,KAAKgC,OAASA,EACdhC,KAAKuI,WAAa,IAAIC,IACtBxI,KAAK4H,UAAY,KAGjB5H,KAAKyI,qBACN,CAKD,mBAAAA,GACEzI,KAAK4H,UAAYT,IACjBQ,EAAe3H,KAAK4H,WACpB5H,KAAKgC,OAAOY,IAAI,8BAA+B5C,KAAK4H,UACrD,CAOD,IAAA9D,CAAKI,EAAOyC,EAAO,IACjB,IAAK3G,KAAKqI,QAAQtF,WAEhB,YADA/C,KAAKgC,OAAOf,MAAM,4CAKpB,MAUMyH,EAVmB,CACvBC,cAAiB,YACjBC,UAAa,YACbC,KAAQ,YACRC,aAAgB,QAChBC,YAAe,aACfC,aAAgB,QAChBC,YAAe,cAGwB/E,IAAU,QAC7CgF,EDyBc,oBAAXhH,QAA0BA,OAAOC,WACnCD,OAAOC,aAGT,OAASgH,KAAKC,MAAQ,IAAM7G,KAAKC,SAASC,SAAS,IAAI4G,OAAO,EAAG,GC1BhEtF,EAAU,CACdG,MAAOwE,EACPY,WAAYtJ,KAAKqI,QAAQxF,QACzB0G,WAAW,IAAIJ,MAAOK,cACtBC,cAAezJ,KAAKY,OAAOf,IAAI,gBAC/B6J,WAAY1J,KAAK4H,UACjB+B,SAAUT,EACVU,QAASjD,EAAKiD,SAAW5J,KAAKqI,QAAQxF,QACtCgH,SAA4B,oBAAXpK,OAAyBA,OAAOE,SAASmK,KAAOnD,EAAKkD,UAAY,GAClFE,SAA8B,oBAAbC,SAA2BA,SAASD,SAAWpD,EAAKoD,UAAY,MAC9EpD,GAICsD,EAAW,GAAG/F,KAASH,EAAQwF,aAAa5E,KAAKC,UAAU+B,KAE7D3G,KAAKuI,WAAW2B,IAAID,GACtBjK,KAAKgC,OAAOoB,KAAK,6BAA8Bc,IAIjDlE,KAAKuI,WAAWpH,IAAI8I,EAAUd,KAAKC,OAGnCe,WAAW,KACTnK,KAAKuI,WAAW6B,OAAOH,IACtB,KAEHjK,KAAKgC,OAAOY,IAAI,oBAAqBmB,GACrC/D,KAAKsI,UAAUxE,KAAKC,GACrB,CAOD,gBAAAsG,CAAiBC,EAAW3D,EAAO,IACjC3G,KAAK8D,KAAK,eAAgB,CACxByG,WAAYD,EACZE,WAAY7D,EACZ8D,kBAAmBH,KAChB3D,IAGL3G,KAAKgC,OAAOY,IAAI,wBAAyB0H,EAC1C,CAKD,gBAAAI,GACE1K,KAAK4H,UAAYT,IACjBQ,EAAe3H,KAAK4H,WACpB5H,KAAKgC,OAAOY,IAAI,4BAA6B5C,KAAK4H,UACnD,ECxGI,MAAM+C,EACX,WAAA5K,CAAYa,EAAQW,EAAOqJ,EAAc5I,GACvChC,KAAKY,OAASA,EACdZ,KAAKuB,MAAQA,EACbvB,KAAK4K,aAAeA,EACpB5K,KAAKgC,OAASA,EACdhC,KAAK6K,MAAQ,IACd,CAGD,KAAA5I,GACEjC,KAAK8K,OAEL,MAAMC,EAAW/K,KAAKY,OAAOf,IAAI,gBAEjCG,KAAK6K,MAAQG,YAAY,KACvB,MAAMnJ,EAAUkJ,EAAW,IAC3B/K,KAAKuB,MAAMK,mBAAmBC,GAC9B7B,KAAK6I,QACJkC,GAEH/K,KAAKgC,OAAOY,IAAI,iCAAiCmI,EAAW,OAC7D,CAGD,IAAAD,GACM9K,KAAK6K,QACPI,cAAcjL,KAAK6K,OACnB7K,KAAK6K,MAAQ,KACb7K,KAAKgC,OAAOY,IAAI,sBAEnB,CAGD,IAAAiG,GACE7I,KAAK4K,aAAa9G,KAAK,OAAQ,CAC7BoH,mBAAoBlL,KAAKuB,MAAM1B,IAAI,aACnCgK,SAA4B,oBAAXpK,OAAyBA,OAAOE,SAASmK,KAAO,KACjEqB,WAAgC,oBAAbnB,WAA4BA,SAASoB,QAE3D,CAGD,OAAAC,GACErL,KAAK6I,MACN,CAGD,SAAAyC,GACE,OAAsB,OAAftL,KAAK6K,KACb,EChDI,MAAMU,EACX,WAAAxL,CAAYa,EAAQW,EAAOqJ,EAAc5I,GACvChC,KAAKY,OAASA,EACdZ,KAAKuB,MAAQA,EACbvB,KAAK4K,aAAeA,EACpB5K,KAAKgC,OAASA,CACf,CAGD,KAAAwJ,CAAMC,GACJ,MAAMC,EXcc,oBAAXjM,QAA8C,oBAAbuK,SACnC,GAGF,CACL2B,UAAWlM,OAAOE,SAASiM,SAC3B/B,SAAUpK,OAAOE,SAASmK,KAC1B+B,WAAY7B,SAAS8B,MACrB/B,SAAUC,SAASD,UWpBf0B,IACFC,EAASC,UAAYF,GAGvBzL,KAAK4K,aAAa9G,KAAK,YAAa4H,GACpC1L,KAAKuB,MAAMJ,IAAI,WAAYuK,EAASC,WACpC3L,KAAKgC,OAAOY,IAAI,qBAAsB8I,EAASC,UAChD,ECtBI,MAAMI,EACX,WAAAhM,CAAYa,EAAQW,EAAO8G,EAASuC,EAAcoB,EAAaC,EAAiBjK,GAC9EhC,KAAKY,OAASA,EACdZ,KAAKuB,MAAQA,EACbvB,KAAKqI,QAAUA,EACfrI,KAAK4K,aAAeA,EACpB5K,KAAKgM,YAAcA,EACnBhM,KAAKiM,gBAAkBA,EACvBjM,KAAKgC,OAASA,CACf,CAED,KAAAkK,GACwB,oBAAXzM,SAEXO,KAAKmM,sBACLnM,KAAKoM,0BAELpM,KAAKqM,qBAEDrM,KAAKY,OAAOf,IAAI,cAClBG,KAAKsM,2BAER,CAED,mBAAAH,GACE1M,OAAOmE,iBAAiB,eAAgB,KACtC5D,KAAKgM,YAAYlB,OACjB9K,KAAK4K,aAAa9G,KAAK,cAAe,CACpCyI,yBAA0BvM,KAAKuB,MAAM1B,IAAI,aACzCgK,SAAUpK,OAAOE,SAASmK,OAE5B9J,KAAKqI,QAAQvF,OAEhB,CAED,uBAAAsJ,GACEpC,SAASpG,iBAAiB,mBAAoB,KACxCoG,SAASoB,QACXpL,KAAKgM,YAAYlB,OACjB9K,KAAKgC,OAAOY,IAAI,oCAEhB5C,KAAKgM,YAAY/J,QACjBjC,KAAKgC,OAAOY,IAAI,sCAGrB,CAED,kBAAAyJ,GACErC,SAASpG,iBAAiB,QAAUsE,IAClC,MAAMsE,EAAStE,EAAEsE,OAEXC,EAAc,CAClBC,IAAKF,EAAOG,QAAQC,cACpBC,GAAIL,EAAOK,IAAM,KACjBC,MAAON,EAAOO,WAAa,KAC3BC,KAAMR,EAAOS,WAAWC,UAAU,EAAG,MAAQ,KAC7CpD,KAAM0C,EAAO1C,MAAQ,MAGA,WAAnB0C,EAAOG,SAAwBH,EAAOW,QAAQ,WAChDnN,KAAK4K,aAAa9G,KAAK,eAAgB,IAClC2I,EACHW,YAAaZ,EAAO3H,MAAQ,WAE9B7E,KAAKgC,OAAOY,IAAI,wBAAyB6J,IAGf,MAAnBD,EAAOG,SAAmBH,EAAOW,QAAQ,MAChDnN,KAAK4K,aAAa9G,KAAK,eAAgB,CACrCyG,WAAY,gBACTkC,EACHY,SAAUb,EAAOc,WAAa7N,OAAOE,SAAS2N,WAEhDtN,KAAKgC,OAAOY,IAAI,sBAAuB6J,IAGb,UAAnBD,EAAOG,SAAuC,WAAhBH,EAAO3H,OAC5C7E,KAAK4K,aAAa9G,KAAK,cAAe,IACjC2I,EACHc,QAASf,EAAOgB,MAAMX,IAAM,KAC5BY,UAAWjB,EAAOgB,MAAME,MAAQ,OAElC1N,KAAKgC,OAAOY,IAAI,uBAAwB6J,MAEzC,GAEHzM,KAAKgC,OAAOY,IAAI,mCACjB,CAED,wBAAA0J,GACEtM,KAAKuB,MAAMJ,IAAI,WAAY1B,OAAOE,SAASiM,UAE3C,MAAM+B,EAAkB,KACtB,MAAMC,EAAcnO,OAAOE,SAASiM,SAGhCgC,IAFa5N,KAAKuB,MAAM1B,IAAI,aAG9BG,KAAKiM,gBAAgBT,MAAMoC,IAI/BnO,OAAOmE,iBAAiB,WAAY+J,GAEpC,MAAME,EAAoBC,QAAQC,UAC5BC,EAAuBF,QAAQG,aAErCH,QAAQC,UAAY,WAClBF,EAAkBK,MAAMlO,KAAMmO,WAC9BR,GACN,EAEIG,QAAQG,aAAe,WACrBD,EAAqBE,MAAMlO,KAAMmO,WACjCR,GACN,EAEI3N,KAAKgC,OAAOY,IAAI,kCACjB,EC+FE,MAACwL,EAAY,IAvMlB,MACE,WAAArO,GACEC,KAAKgC,OAAS,IAAIgB,GAAO,GACzBhD,KAAKY,OAAS,IAAId,EAClBE,KAAKuB,MAAQ,IAAID,EACjBtB,KAAKqI,QAAU,KACfrI,KAAKsI,UAAY,KACjBtI,KAAK4K,aAAe,KACpB5K,KAAKgM,YAAc,KACnBhM,KAAKiM,gBAAkB,KACvBjM,KAAKqO,iBAAmB,KACxBrO,KAAKsO,mBAAoB,CAC1B,CAGD,eAAAC,GACE,GAAwB,oBAAbvE,SAA0B,OAAO,KAE5C,MAAMwE,EAAUxE,SAASyE,qBAAqB,UAC9C,IAAIC,EAAe,KAEnB,IAAK,IAAIC,KAAUH,EAAS,CAC1B,MAAMI,EAAMD,EAAOE,aAAa,OAEhC,GAAID,IAAQA,EAAIjJ,SAAS,qBAAuBiJ,EAAIjJ,SAAS,iBAAkB,CAE7E,IAAIxF,EAASwO,EAAOE,aAAa,iBAAmB,uCAG/C1O,EAAO2E,SAAS,OACnB3E,GAAU,KAGZuO,EAAe,CACbxO,aAAcyO,EAAOE,aAAa,eAAiBF,EAAOE,aAAa,sBACvE1O,OAAQA,EACRG,MAA6C,SAAtCqO,EAAOE,aAAa,cAC3BlO,OAAQgO,EAAOE,aAAa,gBAAkBpP,OAAOE,SAAS2N,SAC9DwB,UAAsD,UAA3CH,EAAOE,aAAa,oBAEjC,KACD,CACF,CAED,OAAOH,CACR,CAGD,QAAAK,GAEE,GAAI/O,KAAKsO,mBAAqBtO,KAAKgP,eAEjC,YADAhP,KAAKgC,OAAOoB,KAAK,8CAInBpD,KAAKsO,mBAAoB,EACzBtO,KAAKgP,gBAAiB,EAEtB,MAAMN,EAAe1O,KAAKuO,kBAE1B,IAAKG,IAAiBA,EAAaxO,aAGjC,OAFAc,QAAQC,MAAM,mFACdjB,KAAKgP,gBAAiB,GAIxBhP,KAAKa,KAAK6N,GACV1O,KAAKgP,gBAAiB,CACvB,CAGD,IAAAnO,CAAKC,EAAU,IACb,Gb5CuB,oBAAXrB,QAA8C,oBAAbuK,Sa8C3C,OADAhK,KAAKgC,OAAOf,MAAM,mEACX,EAGT,GAAIjB,KAAKuB,MAAM1B,IAAI,iBAEjB,OADAG,KAAKgC,OAAOoB,KAAK,qCACV,EAGT,IAAKpD,KAAKY,OAAOC,KAAKC,GACpB,OAAO,EAKT,GAFAd,KAAKgC,OAAOkB,SAASlD,KAAKY,OAAOf,IAAI,UAEjCG,KAAKY,OAAOf,IAAI,sBAAiD,MAAzB4D,UAAUwL,WAEpD,OADAjP,KAAKgC,OAAOoB,KAAK,+CACV,EAGTpD,KAAKqI,QAAU,IAAItG,EAAQ/B,KAAKY,OAAQZ,KAAKgC,QAE7C,MAAM8M,GAA6C,IAAjC9O,KAAKY,OAAOf,IAAI,aAoClC,OAlCIiP,GAA+B,oBAAX1I,QACtBpG,KAAKsI,UAAY,IAAIxC,EAAmB9F,KAAKY,OAAQZ,KAAKgC,QAC1DhC,KAAKgC,OAAOY,IAAI,8CAEhB5C,KAAKsI,UAAY,IAAIhF,EAAatD,KAAKY,OAAQZ,KAAKgC,QACpDhC,KAAKgC,OAAOY,IAAI,8CAGlB5C,KAAK4K,aAAe,IAAIxC,EAAapI,KAAKY,OAAQZ,KAAKqI,QAASrI,KAAKsI,UAAWtI,KAAKgC,QACrFhC,KAAKgM,YAAc,IAAIrB,EAAY3K,KAAKY,OAAQZ,KAAKuB,MAAOvB,KAAK4K,aAAc5K,KAAKgC,QACpFhC,KAAKiM,gBAAkB,IAAIV,EAAgBvL,KAAKY,OAAQZ,KAAKuB,MAAOvB,KAAK4K,aAAc5K,KAAKgC,QAC5FhC,KAAKqO,iBAAmB,IAAItC,EAC1B/L,KAAKY,OACLZ,KAAKuB,MACLvB,KAAKqI,QACLrI,KAAK4K,aACL5K,KAAKgM,YACLhM,KAAKiM,gBACLjM,KAAKgC,QAGPhC,KAAKqI,QAAQpG,QACbjC,KAAK4K,aAAa9G,KAAK,gBb3HH,oBAAXrE,QAA8C,oBAAbuK,SACnC,GAGF,CACLkF,WAAYzL,UAAU0L,UACtBC,kBAAmB,GAAG3P,OAAO4P,OAAOC,SAAS7P,OAAO4P,OAAOE,SAC3DC,cAAe,GAAG/P,OAAOgQ,cAAchQ,OAAOiQ,cAC9CC,SAAUlM,UAAUkM,SACpBC,SAAUC,KAAKC,iBAAiBC,kBAAkBC,SAClDjG,SAAUC,SAASD,UAAY,SAC/BF,SAAUpK,OAAOE,SAASmK,KAC1B+B,WAAY7B,SAAS8B,QagHrB9L,KAAKgM,YAAY/J,QACjBjC,KAAKqO,iBAAiBnC,QACtBlM,KAAKuB,MAAMJ,IAAI,iBAAiB,GAEhCnB,KAAKgC,OAAOY,IAAI,4CAA6C,CAC3DxC,UAAWJ,KAAKqI,QAAQxF,QACxB3C,aAAcF,KAAKY,OAAOf,IAAI,gBAC9BoQ,cAAenB,EACfoB,WAAY,QAGP,CACR,CAGD,UAAAC,CAAW7F,EAAW3D,EAAO,IACtB3G,KAAKuB,MAAM1B,IAAI,iBAKpBG,KAAK4K,aAAaP,iBAAiBC,EAAW3D,GAJ5C3G,KAAKgC,OAAOf,MAAM,yCAKrB,CAGD,aAAAmP,CAAc3E,GACPzL,KAAKuB,MAAM1B,IAAI,iBAKpBG,KAAKiM,gBAAgBT,MAAMC,GAJzBzL,KAAKgC,OAAOf,MAAM,yCAKrB,CAGD,IAAA4H,GACO7I,KAAKuB,MAAM1B,IAAI,iBAKpBG,KAAKgM,YAAYX,UAJfrL,KAAKgC,OAAOf,MAAM,yCAKrB,CAGD,cAAAoP,GACE,MAAO,CACLjQ,UAAWJ,KAAKqI,SAASxF,SAAW,KACpC3C,aAAcF,KAAKY,OAAOf,IAAI,gBAC9B4B,UAAWzB,KAAKuB,MAAM1B,IAAI,aAC1B2B,cAAexB,KAAKuB,MAAM1B,IAAI,iBAC9BqG,UAAWlG,KAAKsI,WAAWzC,gBAAkB,EAC7CqK,WAAY,KACZtI,UAAW5H,KAAK4K,cAAchD,WAAa,KAE9C,CAGD,WAAA0I,GACEtQ,KAAKgC,OAAOkB,UAAS,GACrBlD,KAAKY,OAAOO,IAAI,SAAS,EAC1B,CAGD,YAAAoP,GACEvQ,KAAKgC,OAAOkB,UAAS,GACrBlD,KAAKY,OAAOO,IAAI,SAAS,EAC1B,CAGD,OAAAqP,GACExQ,KAAKgM,aAAalB,OAClB9K,KAAKsI,WAAWpB,cAChBlH,KAAKqI,SAASvF,MACd9C,KAAKuB,MAAMO,QACX9B,KAAKgC,OAAOY,IAAI,gBACjB,SAKqB,oBAAboH,WACmB,YAAxBA,SAASyG,WACXzG,SAASpG,iBAAiB,mBAAoB,KAC5CwK,EAAUW,YACT,CAAE2B,MAAM,IAEXtC,EAAUW,YAIQ,oBAAX4B,QAA0BA,OAAOC,UAC1CD,OAAOC,QAAUxC,GAGG,oBAAX3O,SACTA,OAAOoR,UAAYzC"}